{"version":3,"sources":["components/ProfileInfo.js","actions/changeToken.js","components/SignInForm.js","components/SignUpForm.js","components/UserRoutines.js","components/LocationRisk.js","components/AffectionLikelihood.js","components/AddRoutine.js","components/HomePage.js","reducers/token.js","components/App.js","reportWebVitals.js","index.js"],"names":["ProfileInfo","props","state","requestOptions","method","headers","this","token","fetch","domain","then","response","ok","console","log","json","data","firstName","lastName","gender","username","dateOfBirth","profession","setState","catch","error","Card","CardContent","Typography","align","CardActions","IconButton","style","marginLeft","Edit","Component","connect","withRouter","setToken","type","payload","clearToken","SignInForm","email","password","disabled","loginButtonPressed","bind","emailChange","passwordChange","formClicked","formClickAway","ClickAwayListener","onClickAway","Grid","container","spacing","onClick","item","xs","component","variant","FormControl","TextField","required","label","value","helperText","onChange","Button","color","e","target","body","JSON","stringify","status","alert","history","push","React","SignUpForm","signupButtonPressed","firstNameChange","lastNameChange","usernameChange","genderChange","professionChange","dateOfBirthChange","select","MenuItem","UserRoutines","routines","length","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","routine","index","scope","location","visited_outside","wore_mask","wore_ppe","other_interaction","covid_positive","LocationRisk","locationRisk","numRecords","locationRiskButtonPressed","locationChange","Math","round","url","URL","queryParams","Object","keys","forEach","key","searchParams","append","AffectionLikelihood","probabilityUnsafe","AddRoutine","covidPositive","visitedOutside","otherInteraction","woreMask","worePPE","addRoutineButtonPressed","covidPositiveToggle","visitedOutsideToggle","otherInteractionToggle","woreMaskToggle","worePPEToggle","FormControlLabel","control","Checkbox","checked","name","HomePage","anchorEl","logoutButtonPressed","handleMenuOpen","handleMenuClose","profileMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","Link","to","AccountCircle","ExitToApp","basename","process","AppBar","position","Toolbar","textDecoration","paddingLeft","exact","path","event","currentTarget","tokenReducer","action","persistConfig","storage","persistedReducer","persistReducer","myStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","myPersistor","persistStore","App","store","loading","persistor","appDiv","document","getElementById","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.b08af2b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { Card, CardContent, Typography, CardActions, IconButton } from \"@material-ui/core\";\r\nimport { Edit } from \"@material-ui/icons\";\r\n\r\nclass ProfileInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Token \" + this.props.token,\r\n            },\r\n        };\r\n\r\n        fetch(this.props.domain + '/user_detail/', requestOptions)\r\n            .then(response => {\r\n                if(!response.ok){\r\n                    console.log(response);\r\n                    return;\r\n                }\r\n                \r\n                console.log('response: ', response);\r\n                \r\n                response.json()\r\n                    .then(data => {\r\n                        const firstName = data['first_name'];\r\n                        const lastName = data['last_name'];\r\n                        const gender = data['gender'];\r\n                        const username = data['username'];\r\n                        const dateOfBirth = data['date_of_birth'];\r\n                        const profession = data['profession'];\r\n\r\n                        this.setState({\r\n                            firstName: firstName,\r\n                            lastName: lastName,\r\n                            gender: gender == 1 ? 'Male' : 'Female',\r\n                            username: username,\r\n                            dateOfBirth: dateOfBirth,\r\n                            profession: profession\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('Error: ', error);\r\n                    });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography align=\"center\">{this.state.firstName} {this.state.lastName}</Typography>\r\n                    <Typography align=\"center\">{this.state.gender}</Typography>\r\n                    <Typography align=\"center\">{this.state.username}</Typography>\r\n                    <Typography align=\"center\">{this.state.dateOfBirth}</Typography>\r\n                    <Typography align=\"center\">{this.state.profession}</Typography>\r\n                </CardContent>\r\n\r\n                <CardActions>\r\n                    <IconButton style={{marginLeft: \"40%\"}}><Edit /></IconButton>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\n// the component that it is connected to\r\n// will have token as a prop\r\nconst mapStateToProps = state => ({\r\n    token: state.token\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(ProfileInfo));","// use when a token is received after logging in\r\nexport const setToken = (token) => {\r\n    return {\r\n        type: 'NEW',\r\n        payload: token\r\n    }\r\n}\r\n\r\n// use if login has failed\r\nexport const clearToken = () => {\r\n    return {\r\n        type: 'EMPTY',\r\n        payload: null\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { setToken } from '../actions/changeToken';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    Button, Grid, Typography, FormControl, TextField, ClickAwayListener\r\n} from \"@material-ui/core\";\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass SignInForm extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            disabled: false,\r\n        };\r\n\r\n        console.log('SignInForm_token: ', this.props.token);\r\n        \r\n        this.loginButtonPressed = this.loginButtonPressed.bind(this);\r\n        this.emailChange = this.emailChange.bind(this);\r\n        this.passwordChange = this.passwordChange.bind(this);\r\n        this.formClicked = this.formClicked.bind(this);\r\n        this.formClickAway = this.formClickAway.bind(this);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <ClickAwayListener onClickAway={this.formClickAway}>\r\n                <Grid container spacing={5} onClick={this.formClicked}>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                            Already have an account? Sign in.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <FormControl component=\"fieldset\">\r\n                            <TextField\r\n                                required={true}\r\n                                type=\"email\"\r\n                                label=\"Email Address\"\r\n                                value={this.state.email}\r\n                                error={this.state.disabled ? false : this.state.email === ''}\r\n                                helperText={this.state.email === '' ? 'Email address is required' : ''}\r\n                                onChange={this.emailChange}\r\n                                onClick={this.formClicked}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <FormControl component=\"fieldset\">\r\n                            <TextField\r\n                                required={true}\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                value={this.state.password}\r\n                                error={this.state.disabled ? false : this.state.password == ''}\r\n                                helperText={this.state.password === '' ? 'Password is required' : ''}\r\n                                onChange={this.passwordChange}\r\n                                onClick={this.formClicked}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            disabled={this.state.disabled}\r\n                            onClick={this.state.disabled ? this.formClicked : this.loginButtonPressed}\r\n                            >\r\n                            Login\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </ClickAwayListener>\r\n        )\r\n    }\r\n\r\n    emailChange(e) {\r\n        this.setState({\r\n            email: e.target.value,\r\n        });\r\n    }\r\n\r\n    passwordChange(e) {\r\n        this.setState({\r\n            password: e.target.value,\r\n        });\r\n    }\r\n\r\n    loginButtonPressed() {\r\n        console.log('Login button pressed!');\r\n        const email = this.state.email, password = this.state.password;\r\n        \r\n        if(!email || !password){\r\n            return;\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                'username': email,\r\n                'password': password\r\n            }),\r\n        };\r\n\r\n        fetch(this.props.domain + \"/get_auth_token/\", requestOptions)\r\n            .then(response => {\r\n                if(response.status != 200){\r\n                    alert('Invalid username or password!');\r\n                    return;\r\n                }\r\n\r\n                response.json()\r\n                    .then(data => {\r\n                        console.log('token: ', data.token);\r\n                        alert('Logging In.');\r\n                        this.props.setToken(data.token);\r\n                        this.props.history.push('/profile', {token: data.token});\r\n                    });\r\n\r\n                this.setState({\r\n                    email: '',\r\n                    password: ''\r\n                });\r\n                \r\n            })\r\n            .catch(error => alert('Could not contact the server!'));\r\n    }\r\n\r\n    formClicked() {\r\n        this.setState({\r\n            disabled: false,\r\n        });\r\n    }\r\n\r\n    formClickAway() {\r\n        this.setState({\r\n            disabled: true,\r\n        });\r\n    }\r\n}\r\n\r\n// the component that it is connected to\r\n// wil have token as a prop\r\nconst mapStateToProps = state => ({\r\n    token: state.token\r\n});\r\n\r\n// the component that it is connected to\r\n// will have setNewToken and clearToken as props\r\n// object structure {a, b} equivalent to {a: a, b: b}\r\nconst mapDispatchToProps = () => ({\r\n    setToken\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps())(withRouter(SignInForm));","import React from 'react';\r\n\r\nimport {\r\n    Button, Grid, Typography, FormControl, TextField, ClickAwayListener, Select, MenuItem\r\n} from \"@material-ui/core\";\r\n\r\nclass SignUpForm extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            gender: null,\r\n            email: '',\r\n            password: '',\r\n            profession: '',\r\n            dateOfBirth: '',\r\n            disabled: true,\r\n        };\r\n        this.signupButtonPressed = this.signupButtonPressed.bind(this);\r\n        this.firstNameChange = this.firstNameChange.bind(this);\r\n        this.lastNameChange = this.lastNameChange.bind(this);\r\n        this.usernameChange = this.usernameChange.bind(this);\r\n        this.genderChange = this.genderChange.bind(this);\r\n        this.emailChange = this.emailChange.bind(this);\r\n        this.passwordChange = this.passwordChange.bind(this);\r\n        this.professionChange = this.professionChange.bind(this);\r\n        this.dateOfBirthChange = this.dateOfBirthChange.bind(this);\r\n        this.formClicked = this.formClicked.bind(this);\r\n        this.formClickAway = this.formClickAway.bind(this);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <ClickAwayListener onClickAway={this.formClickAway}>\r\n                <Grid container spacing={5} onClick={this.formClicked}>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                            Don't have an account? Create one.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <FormControl component=\"fieldset\">\r\n                            <TextField \r\n                                required={true}\r\n                                type=\"text\"\r\n                                label=\"First Name\"\r\n                                error={this.state.disabled ? false : this.state.firstName === ''}\r\n                                helperText={this.state.firstName === '' ? 'First Name is required' : ''}\r\n                                onChange={this.firstNameChange}\r\n                                onClick={this.formClicked}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <FormControl component=\"fieldset\">\r\n                            <TextField \r\n                                required={true}\r\n                                type=\"text\"\r\n                                label=\"Last Name\"\r\n                                error={this.state.disabled ? false : this.state.lastName === ''}\r\n                                helperText={this.state.lastName === '' ? 'Last Name is required' : ''}\r\n                                onChange={this.lastNameChange}\r\n                                onClick={this.formClicked}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <FormControl component=\"fieldset\">\r\n                            <TextField \r\n                                required={true}\r\n                                type=\"text\"\r\n                                label=\"Username\"\r\n                                error={this.state.disabled ? false : this.state.username === ''}\r\n                                helperText={this.state.username === '' ? 'Username is required' : ''}\r\n                                onChange={this.usernameChange}\r\n                                onClick={this.formClicked}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <FormControl component=\"fieldset\">\r\n                            <TextField\r\n                                helperText=\"Gender\"\r\n                                select\r\n                                onChange={this.genderChange}\r\n                                onClick={this.formClicked}>\r\n                                <MenuItem value={1}>Male</MenuItem>\r\n                                <MenuItem value={2}>Female</MenuItem>\r\n                            </TextField>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <FormControl component=\"fieldset\">\r\n                            <TextField\r\n                                required={true}\r\n                                type=\"email\"\r\n                                label=\"Email Address\"\r\n                                error={this.state.disabled ? false : this.state.email === ''}\r\n                                helperText={this.state.email === '' ? 'Email address is required' : ''}\r\n                                onChange={this.emailChange}\r\n                                onClick={this.formClicked}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <FormControl component=\"fieldset\">\r\n                            <TextField\r\n                                required={true}\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                error={this.state.disabled ? false : this.state.password === ''}\r\n                                helperText={this.state.password === '' ? 'Password is required' : ''}\r\n                                onChange={this.passwordChange}\r\n                                onClick={this.formClicked}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <FormControl component=\"fieldset\">\r\n                            <TextField\r\n                                required={false}\r\n                                type=\"text\"\r\n                                label=\"Profession\"\r\n                                helperText={'Optional'}\r\n                                onChange={this.professionChange}\r\n                                onClick={this.formClicked}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <FormControl component=\"fieldset\">\r\n                            <TextField\r\n                                required={false}\r\n                                type=\"date\"\r\n                                onChange={this.dateOfBirthChange}\r\n                                onClick={this.formClicked}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            disabled={this.state.disabled}\r\n                            onClick={this.state.disabled ? this.formClicked : this.signupButtonPressed}>\r\n                            Sign Up\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </ClickAwayListener>\r\n        )\r\n    }\r\n\r\n    firstNameChange(e) {\r\n        this.setState({\r\n            firstName: e.target.value,\r\n        });\r\n    }\r\n\r\n    lastNameChange(e) {\r\n        this.setState({\r\n            lastName: e.target.value,\r\n        });\r\n    }\r\n\r\n    usernameChange(e) {\r\n        this.setState({\r\n            username: e.target.value,\r\n        });\r\n    }\r\n\r\n    genderChange(e) {\r\n        this.setState({\r\n            gender: e.target.value,\r\n        });\r\n    }\r\n\r\n    emailChange(e) {\r\n        this.setState({\r\n            email: e.target.value,\r\n        });\r\n    }\r\n\r\n    passwordChange(e) {\r\n        this.setState({\r\n            password: e.target.value,\r\n        });\r\n    }\r\n\r\n    professionChange(e) {\r\n        this.setState({\r\n            profession: e.target.value,\r\n        });\r\n    }\r\n\r\n    dateOfBirthChange(e) {\r\n        this.setState({\r\n            dateOfBirth: e.target.value,\r\n        });\r\n    }\r\n\r\n    signupButtonPressed() {\r\n        console.log('Login button pressed!');\r\n        const firstName = this.state.firstName;\r\n        const lastName = this.state.lastName;\r\n        const username = this.state.username;\r\n        const gender = this.state.gender;\r\n        const email = this.state.email;\r\n        const password = this.state.password;\r\n        const profession = this.state.profession;\r\n        const dateOfBirth = this.state.dateOfBirth;\r\n        \r\n        if(!firstName || !lastName || !username || !email || !password){\r\n            return;\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                'firstName': firstName,\r\n                'lastName': lastName,\r\n                'username': username,\r\n                'gender': gender,\r\n                'email': email,\r\n                'password': password,\r\n                'profession': profession,\r\n                'dateOfBirth': dateOfBirth,\r\n            }),\r\n        };\r\n\r\n        fetch(this.props.domain + \"/create_user/\", requestOptions)\r\n            .then((response) => {\r\n                if(response.status != 200){\r\n                    console.log('Errors: ', response);\r\n                    return;\r\n                }\r\n\r\n                console.log('Data: ', response.body);\r\n            });\r\n        \r\n        \r\n    }\r\n\r\n    formClicked() {\r\n        this.setState({\r\n            disabled: false,\r\n        });\r\n    }\r\n\r\n    formClickAway() {\r\n        this.setState({\r\n            disabled: true,\r\n        });\r\n    }\r\n}\r\n\r\nexport default SignUpForm;","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { Typography} from \"@material-ui/core\";\r\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\r\n\r\nclass UserRoutines extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Token \" + this.props.token,\r\n            },\r\n        };\r\n\r\n        fetch(this.props.domain + '/my_routines/', requestOptions)\r\n            .then(response => {\r\n                if(!response.ok){\r\n                    console.log(response);\r\n                    return;\r\n                }\r\n                \r\n                console.log('response: ', response);\r\n                \r\n                response.json()\r\n                    .then(data => {\r\n                        this.setState({\r\n                            routines: data\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('Error: ', error);\r\n                    });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {((this.state.routines) && (this.state.routines.length > 0)) ?\r\n                    <TableContainer>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Location</TableCell>\r\n                                    <TableCell align=\"right\">Visited Outside</TableCell>\r\n                                    <TableCell align=\"right\">Wore Mask</TableCell>\r\n                                    <TableCell align=\"right\">Wore PPE</TableCell>\r\n                                    <TableCell align=\"right\">Others Interaction</TableCell>\r\n                                    <TableCell align=\"right\">Covid Positive</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.routines.map((routine, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {routine.location}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{routine.visited_outside ? 'Yes' : 'No'}</TableCell>\r\n                                        <TableCell align=\"right\">{routine.wore_mask ? 'Yes' : 'No'}</TableCell>\r\n                                        <TableCell align=\"right\">{routine.wore_ppe ? 'Yes' : 'No'}</TableCell>\r\n                                        <TableCell align=\"right\">{routine.other_interaction ? 'Yes' : 'No'}</TableCell>\r\n                                        <TableCell align=\"right\">{routine.covid_positive ?\r\n                                            <Typography color=\"secondary\">Yes</Typography> :\r\n                                            <Typography color=\"primary\">No</Typography>}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer> :\r\n                    <Typography align=\"center\">No routines found. Please enter a routine.</Typography>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// the component that it is connected to\r\n// will have token as a prop\r\nconst mapStateToProps = state => ({\r\n    token: state.token\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(UserRoutines));","import React from 'react';\r\n\r\nimport {\r\n    Button, Grid, Typography, FormControl, TextField, Card, CardContent\r\n} from \"@material-ui/core\";\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass LocationRisk extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location: '',\r\n            locationRisk: null,\r\n            numRecords: null,\r\n            color: null\r\n        };\r\n        this.locationRiskButtonPressed = this.locationRiskButtonPressed.bind(this);\r\n        this.locationChange = this.locationChange.bind(this);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Grid container spacing={5} onClick={this.formClicked}>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        Enter location to get risk assessment.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <FormControl component=\"fieldset\">\r\n                        <TextField \r\n                            required={true}\r\n                            type=\"text\"\r\n                            label=\"Location\"\r\n                            error={this.state.location === ''}\r\n                            helperText={this.state.location === '' ? 'Location is required' : ''}\r\n                            onChange={this.locationChange}\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={this.locationRiskButtonPressed}>\r\n                        Get Location Risk\r\n                    </Button>\r\n                </Grid>\r\n                {this.state.locationRisk != null ? \r\n                    <Grid item xs={12} align=\"center\">\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography align=\"center\">{this.state.location}</Typography>\r\n                                <Typography style={{color: this.state.color}} align=\"center\">\r\n                                    {/* round locationRisk to 2 decimal places */}\r\n                                    {this.state.numRecords ?\r\n                                        \"\" + Math.round(this.state.locationRisk * 100) / 100 + \" % risk of affection\" :\r\n                                        null}\r\n                                </Typography>\r\n                                <Typography align=\"center\">\r\n                                    {this.state.numRecords ?\r\n                                        \"Obtained from \" + this.state.numRecords + \" records.\" :\r\n                                        \"No record exists for this location\"}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid> :\r\n                    null}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    locationChange(e) {\r\n        this.setState({\r\n            location: e.target.value,\r\n            locationRisk: null,\r\n            numRecords: null\r\n        });\r\n    }\r\n\r\n    locationRiskButtonPressed() {\r\n        console.log('Location risk button pressed!');\r\n        const location = this.state.location;\r\n        \r\n        if(!location){\r\n            this.setState({\r\n                locationRisk: null,\r\n                numRecords: null,\r\n                color: null\r\n            })\r\n            return;\r\n        }\r\n\r\n        // Accepted answer from\r\n        // https://stackoverflow.com/questions/35038857/setting-query-string-using-fetch-get-request\r\n        const url = new URL(this.props.domain + '/location_risk/');\r\n        const queryParams = {\r\n            location\r\n        };\r\n        Object.keys(queryParams).forEach(key => url.searchParams.append(key, queryParams[key]));\r\n\r\n        fetch(url)\r\n            .then((response) => {\r\n                if(response.status == 400){\r\n                    alert('Location was not provided!');\r\n                    return;\r\n                }\r\n\r\n                if(response.status == 200){\r\n                    response.json()\r\n                    .then(data => {\r\n                        const locationRisk = data['affected_rate'];\r\n                        const numRecords = data['num_records'];\r\n                        \r\n                        let color = 'green';\r\n                        if((locationRisk > 39) && (locationRisk <= 55)){\r\n                            color = 'blue';\r\n                        }else if(locationRisk > 55){\r\n                            color = 'red';\r\n                        }\r\n\r\n                        this.setState({\r\n                            locationRisk,\r\n                            numRecords,\r\n                            color\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('Error: ', error);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => console.log('Error: ', error));\r\n    }\r\n}\r\n\r\n// the component that it is connected to\r\n// wil have token as a prop\r\nconst mapStateToProps = state => ({\r\n    token: state.token\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(LocationRisk));","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nclass AffectionLikelihood extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            probabilityUnsafe: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Token \" + this.props.token,\r\n            },\r\n        };\r\n\r\n        fetch(this.props.domain + '/get_prediction/', requestOptions)\r\n            .then(response => {\r\n                if(response.status == 400){\r\n                    console.log('No routines found!');\r\n                    return;\r\n                }\r\n                \r\n                response.json()\r\n                    .then(data => {\r\n                        const probabilityUnsafe = data['affection_probability'];\r\n                        console.log('probabilityUnsafe: ', probabilityUnsafe);\r\n\r\n                        this.setState({\r\n                            probabilityUnsafe\r\n                        });\r\n                    })\r\n                    .catch(error => console.log('Error: ', error));\r\n            })\r\n            .catch(error => console.log('Error: ', error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.probabilityUnsafe != null ?\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography align=\"center\">\r\n                                {/* round probabilityUnsafe to 2 decimal places */}\r\n                                {\"\" + Math.round(this.state.probabilityUnsafe * 100) / 100 +  \"% based on your last 14 routines.\"}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>:\r\n                    <Typography align=\"center\">No routines found. Please enter a routine.</Typography>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// the component that it is connected to\r\n// will have token as a prop\r\nconst mapStateToProps = state => ({\r\n    token: state.token\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(AffectionLikelihood));","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    Button, Grid, Typography, FormControl, TextField, Checkbox, FormControlLabel\r\n} from \"@material-ui/core\";\r\n\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass AddRoutine extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location: '',\r\n            covidPositive: false,\r\n            visitedOutside: false,\r\n            otherInteraction: false,\r\n            woreMask: false,\r\n            worePPE: false\r\n        };\r\n        \r\n        this.addRoutineButtonPressed = this.addRoutineButtonPressed.bind(this);\r\n        this.covidPositiveToggle = this.covidPositiveToggle.bind(this);\r\n        this.visitedOutsideToggle = this.visitedOutsideToggle.bind(this);\r\n        this.otherInteractionToggle = this.otherInteractionToggle.bind(this);\r\n        this.woreMaskToggle = this.woreMaskToggle.bind(this);\r\n        this.worePPEToggle = this.worePPEToggle.bind(this);\r\n        this.locationChange = this.locationChange.bind(this);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Grid container spacing={5}>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        Enter an activity of today.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <FormControl component=\"fieldset\">\r\n                        <TextField \r\n                            required={true}\r\n                            type=\"text\"\r\n                            label=\"Location\"\r\n                            value={this.state.location}\r\n                            error={this.state.location === ''}\r\n                            helperText={this.state.location === '' ? 'Location is required' : ''}\r\n                            onChange={this.locationChange}\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <FormControlLabel\r\n                        label=\"Were you tested positive for Covid-19 after this activity?\"\r\n                        control={<Checkbox\r\n                            checked={this.state.covidPositive}\r\n                            onChange={this.covidPositiveToggle} name=\"covidPositive\"\r\n                        />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <FormControlLabel\r\n                        label=\"Is this location outside of your residence?\"\r\n                        control={<Checkbox\r\n                            checked={this.state.visitedOutside}\r\n                            onChange={this.visitedOutsideToggle} name=\"visitedOutside\"\r\n                        />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <FormControlLabel\r\n                        label=\"Did you interact with other people during this activity?\"\r\n                        control={<Checkbox\r\n                            checked={this.state.otherInteraction}\r\n                            onChange={this.otherInteractionToggle} name=\"otherInteraction\"\r\n                        />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <FormControlLabel\r\n                        label=\"Did you wear a mask during this activity?\"\r\n                        control={<Checkbox\r\n                            checked={this.state.woreMask}\r\n                            onChange={this.woreMaskToggle} name=\"woreMask\"\r\n                        />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <FormControlLabel\r\n                        label=\"Did you wear PPE during this activity?\"\r\n                        control={<Checkbox\r\n                            checked={this.state.worePPE}\r\n                            onChange={this.worePPEToggle} name=\"worePPE\"\r\n                        />}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={this.addRoutineButtonPressed}\r\n                        >\r\n                        Add Routine\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    locationChange(e) {\r\n        this.setState({\r\n            location: e.target.value\r\n        });\r\n    }\r\n\r\n    // e will be the onChange event object\r\n    // stateKey will be the key\r\n    // of the state object to change the value\r\n    covidPositiveToggle(e) {\r\n        this.setState({\r\n            covidPositive: e.target.checked\r\n        });\r\n    }\r\n\r\n    // e will be the onChange event object\r\n    // stateKey will be the key\r\n    // of the state object to change the value\r\n    visitedOutsideToggle(e) {\r\n        this.setState({\r\n            visitedOutside: e.target.checked\r\n        });\r\n    }\r\n\r\n    // e will be the onChange event object\r\n    // stateKey will be the key\r\n    // of the state object to change the value\r\n    otherInteractionToggle(e) {\r\n        this.setState({\r\n            otherInteraction: e.target.checked\r\n        });\r\n    }\r\n\r\n    // e will be the onChange event object\r\n    // stateKey will be the key\r\n    // of the state object to change the value\r\n    woreMaskToggle(e) {\r\n        this.setState({\r\n            woreMask: e.target.checked\r\n        });\r\n    }\r\n\r\n    // e will be the onChange event object\r\n    // stateKey will be the key\r\n    // of the state object to change the value\r\n    worePPEToggle(e) {\r\n        this.setState({\r\n            worePPE: e.target.checked\r\n        });\r\n    }\r\n\r\n    addRoutineButtonPressed() {\r\n        console.log('Add routine button pressed!');\r\n        const location = this.state.location;\r\n        \r\n        if(!location){\r\n            console.log('Returning.');\r\n            return;\r\n        }\r\n\r\n        const covidPositive = this.state.covidPositive;\r\n        const visitedOutside = this.state.visitedOutside;\r\n        const otherInteraction = this.state.otherInteraction;\r\n        const woreMask = this.state.woreMask;\r\n        const worePPE = this.state.worePPE;\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Token \" + this.props.token,\r\n            },\r\n            body: JSON.stringify({\r\n                location,\r\n                covid_positive: covidPositive,\r\n                visited_outside: visitedOutside,\r\n                other_interaction: otherInteraction,\r\n                wore_mask: woreMask,\r\n                wore_ppe: worePPE\r\n            }),\r\n        };\r\n\r\n        fetch(this.props.domain + \"/post_routine/\", requestOptions)\r\n            .then(response => {\r\n                if(response.status == 400){\r\n                    // status code 400\r\n                    // indicates invalid token\r\n                    alert('Not logged in. Please log in to continue.');\r\n                    return;\r\n                }\r\n\r\n                if(response.status == 422){\r\n                    // status code 422\r\n                    // indicates error in form data\r\n                    alert('Error in routine form data');\r\n                    console.log('Errors: ', response)\r\n                    return;\r\n                }\r\n\r\n                response.json()\r\n                    .then(data => {\r\n                        this.props.history.push('/routines', {token: data.token});\r\n                    });\r\n            })\r\n            .catch(error => alert('Could not contact the server!'));\r\n        \r\n        this.setState({\r\n            location: '',\r\n            covidPositive: false,\r\n            visitedOutside: false,\r\n            otherInteraction: false,\r\n            woreMask: false,\r\n            worePPE: false\r\n        });\r\n    }\r\n}\r\n\r\n// the component that it is connected to\r\n// wil have token as a prop\r\nconst mapStateToProps = state => ({\r\n    token: state.token\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(AddRoutine));","import React, { Component } from \"react\";\r\n\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport SignInForm from \"./SignInForm\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport UserRoutines from \"./UserRoutines\";\r\nimport LocationRisk from \"./LocationRisk\";\r\nimport AffectionLikelihood from \"./AffectionLikelihood\";\r\nimport AddRoutine from \"./AddRoutine\";\r\n\r\nimport {\r\n    Grid, Typography, AppBar, Toolbar, Button, IconButton, Menu, MenuItem\r\n} from \"@material-ui/core\";\r\n\r\nimport { Menu as MenuIcon, AccountCircle, ExitToApp } from \"@material-ui/icons\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { clearToken, setToken } from \"../actions/changeToken\";\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null\r\n        };\r\n\r\n        this.logoutButtonPressed = this.logoutButtonPressed.bind(this);\r\n        this.handleMenuOpen = this.handleMenuOpen.bind(this);\r\n        this.handleMenuClose = this.handleMenuClose.bind(this);\r\n\r\n        this.domain = 'https://iamtauhid.pythonanywhere.com';\r\n        // this.domain = 'http://127.0.0.1:8000';\r\n\r\n        console.log('Homepage_token: ', this.props.token);\r\n    }\r\n\r\n    render() {\r\n        console.log('anchorEl: ', this.state.anchorEl);\r\n\r\n        const profileMenu = (\r\n            <Menu\r\n                anchorEl={this.state.anchorEl}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                keepMounted\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={Boolean(this.state.anchorEl)}\r\n                onClose={this.handleMenuClose}\r\n            >\r\n                <MenuItem component={Link} to='/profile' onClick={this.handleMenuClose}>\r\n                    <AccountCircle /> Profile\r\n                </MenuItem>\r\n                <MenuItem component={Link} to='/routines' onClick={this.handleMenuClose}>Routines</MenuItem>\r\n                <MenuItem component={Link} to='/location_risk' onClick={this.handleMenuClose}>Location Risk</MenuItem>\r\n                <MenuItem component={Link} to='/affection_likelihood' onClick={this.handleMenuClose}>Affection Likelihood</MenuItem>\r\n                <MenuItem component={Link} to='/add_routine' onClick={this.handleMenuClose}>Add Routine</MenuItem>\r\n                <MenuItem onClick={this.logoutButtonPressed}>\r\n                    <Button color=\"secondary\">\r\n                        <ExitToApp /> Logout\r\n                    </Button>\r\n                </MenuItem>\r\n            </Menu>\r\n        )\r\n        \r\n\r\n        console.log('profileMenu: ', profileMenu);\r\n        \r\n        return (\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" align=\"center\">\r\n                            <Link style={{textDecoration: 'none', color: 'white'}} to='/'>\r\n                                RedZone\r\n                            </Link>\r\n                        </Typography>\r\n                        {this.props.token ?\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                style={{paddingLeft: \"90%\"}}\r\n                                onClick={this.handleMenuOpen}\r\n                                >\r\n                                <MenuIcon />\r\n                            </IconButton> :\r\n                            null}\r\n                    </Toolbar>\r\n                </AppBar>\r\n                { profileMenu }\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        {this.props.token ?\r\n                            <Redirect to='/profile'/> :\r\n                            <Grid container spacing={0}>\r\n                                <Grid item xs={6}>\r\n                                    <SignInForm domain={this.domain} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <SignUpForm domain={this.domain} />\r\n                                </Grid>\r\n                            </Grid>}\r\n                    </Route>\r\n                    <Route path='/profile'>\r\n                        {this.props.token ?\r\n                            <Grid container spacing={0}>\r\n                                <Grid item xs={4}>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <ProfileInfo domain={this.domain} />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                </Grid>\r\n                            </Grid> :\r\n                            <Redirect to=\"/\" />}\r\n                    </Route>\r\n                    <Route path='/routines'>\r\n                        {this.props.token ?\r\n                            <UserRoutines domain={this.domain} /> :\r\n                            <Redirect to=\"/\" />}\r\n                    </Route>\r\n                    <Route path='/location_risk'>\r\n                        {this.props.token ?\r\n                            <LocationRisk domain={this.domain} /> :\r\n                            <Redirect to=\"/\" />}\r\n                    </Route>\r\n                    <Route path='/affection_likelihood'>\r\n                        {this.props.token ?\r\n                            <AffectionLikelihood domain={this.domain} /> :\r\n                            <Redirect to=\"/\" />}\r\n                    </Route>\r\n                    <Route path='/add_routine'>\r\n                        {this.props.token ?\r\n                            <AddRoutine domain={this.domain} /> :\r\n                            <Redirect to=\"/\" />}\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        );\r\n\r\n    }\r\n\r\n    logoutButtonPressed() {\r\n        this.handleMenuClose();\r\n        this.props.clearToken();\r\n    }\r\n\r\n    handleMenuOpen(event) {\r\n        this.setState({\r\n            anchorEl: event.currentTarget\r\n        });\r\n    };\r\n    \r\n    handleMenuClose() {\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    };\r\n}\r\n\r\n// the component that it is connected to\r\n// will have token as a prop\r\nconst mapStateToProps = state => ({\r\n    token: state.token\r\n});\r\n\r\n// the component that it is connected to\r\n// will have setNewToken and clearToken as props\r\n// object structure {a, b} equivalent to {a: a, b: b}\r\nconst mapDispatchToProps = () => ({\r\n    setToken,\r\n    clearToken\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps())(HomePage);","// if there is a token, return it\r\n// otherwise return null\r\nconst tokenReducer = (state=null, action) => {\r\n    switch(action.type){\r\n        case 'NEW':\r\n            return {\r\n                token: action.payload\r\n            };\r\n        default:\r\n            return {\r\n                token: null\r\n            };\r\n    }\r\n};\r\n\r\nexport default tokenReducer;","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport HomePage from \"./HomePage\";\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport tokenReducer from '../reducers/token';\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, tokenReducer);\r\n\r\nconst myStore = createStore(\r\n    persistedReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nconst myPersistor = persistStore(myStore);\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={myStore}>\r\n                <PersistGate loading={<p>loading...</p>} persistor={myPersistor}>\r\n                    <div>\r\n                        <HomePage />\r\n                    </div>\r\n                </PersistGate>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nconst appDiv = document.getElementById(\"app\");\r\nrender(<App />, appDiv);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}